openapi: 3.0.3
info:
  title: EatPoint API
  version: 1.0.0
  description: Документация для API сервиса
paths:
  /api/v1/auth/confirm-code/:
    post:
      operationId: api_v1_auth_confirm_code_create
      summary: Подтвердить регистрацию
      tags:
      - SignUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmCode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmCode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfirmCode'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmCode'
          description: ''
  /api/v1/auth/confirm-code-refresh/:
    post:
      operationId: api_v1_auth_confirm_code_refresh_create
      summary: Получить кода подтверждения повторно
      tags:
      - SignUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmCodeRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmCodeRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfirmCodeRefresh'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmCodeRefresh'
          description: ''
  /api/v1/auth/signup/:
    post:
      operationId: api_v1_auth_signup_create
      summary: Регистрация аккаунта
      tags:
      - SignUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignUp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignUp'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUp'
          description: ''
  /api/v1/establishments/:
    get:
      operationId: api_v1_establishments_list
      summary: Получить список заведений
      tags:
      - Establishment
      security:
      - jwtAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Establishment'
          description: ''
  /api/v1/establishments/{id}/:
    get:
      operationId: api_v1_establishments_retrieve
      summary: Детальная информация о заведении
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заведение.
        required: true
      tags:
      - Establishment
      security:
      - jwtAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Establishment'
          description: ''
  /api/v1/login/jwt/create/:
    post:
      operationId: api_v1_login_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      summary: Логин
      tags:
      - Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/login/jwt/refresh/:
    post:
      operationId: api_v1_login_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      summary: Обновление JWT токена
      tags:
      - Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/reset-password/:
    post:
      operationId: api_v1_reset_password_create
      summary: Сброс пароля
      tags:
      - Password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/reset-password-confirm/{uid}/{token}/:
    post:
      operationId: api_v1_reset_password_confirm_create
      summary: Подтверждение сброса пароля
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/v1/users/:
    get:
      operationId: api_v1_users_list
      summary: Список пользователей
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Users
      security:
      - jwtAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/{telephone}/:
    get:
      operationId: api_v1_users_retrieve
      summary: Детальная информация о пользователе (id=номер телефона)
      parameters:
      - in: path
        name: telephone
        schema:
          type: string
        required: true
      tags:
      - Users
      security:
      - jwtAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/me/:
    get:
      operationId: api_v1_users_me_retrieve
      summary: Профиль пользователя
      tags:
      - Users
      security:
      - jwtAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_users_me_partial_update
      summary: Редактирование профиля
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    AverageCheckEnum:
      enum:
      - до 1000
      - 1000 - 2000
      - 2000 - 3000
      - от 3000
      type: string
      description: |-
        * `до 1000` - до 1000
        * `1000 - 2000` - 1000 - 2000
        * `2000 - 3000` - 2000 - 3000
        * `от 3000` - от 3000
    BusyEndEnum:
      enum:
      - 08:00
      - 08:30
      - 09:00
      - 09:30
      - '10:00'
      - '10:30'
      - '11:00'
      - '11:30'
      - '12:00'
      - '12:30'
      - '13:00'
      - '13:30'
      - '14:00'
      - '14:30'
      - '15:00'
      - '15:30'
      - '16:00'
      - '16:30'
      - '17:00'
      - '17:30'
      type: string
      description: |-
        * `08:00` - 08:00
        * `08:30` - 08:30
        * `09:00` - 09:00
        * `09:30` - 09:30
        * `10:00` - 10:00
        * `10:30` - 10:30
        * `11:00` - 11:00
        * `11:30` - 11:30
        * `12:00` - 12:00
        * `12:30` - 12:30
        * `13:00` - 13:00
        * `13:30` - 13:30
        * `14:00` - 14:00
        * `14:30` - 14:30
        * `15:00` - 15:00
        * `15:30` - 15:30
        * `16:00` - 16:00
        * `16:30` - 16:30
        * `17:00` - 17:00
        * `17:30` - 17:30
    BusyStartEnum:
      enum:
      - 08:00
      - 08:30
      - 09:00
      - 09:30
      - '10:00'
      - '10:30'
      - '11:00'
      - '11:30'
      - '12:00'
      - '12:30'
      - '13:00'
      - '13:30'
      - '14:00'
      - '14:30'
      - '15:00'
      - '15:30'
      - '16:00'
      - '16:30'
      - '17:00'
      - '17:30'
      type: string
      description: |-
        * `08:00` - 08:00
        * `08:30` - 08:30
        * `09:00` - 09:00
        * `09:30` - 09:30
        * `10:00` - 10:00
        * `10:30` - 10:30
        * `11:00` - 11:00
        * `11:30` - 11:30
        * `12:00` - 12:00
        * `12:30` - 12:30
        * `13:00` - 13:00
        * `13:30` - 13:30
        * `14:00` - 14:00
        * `14:30` - 14:30
        * `15:00` - 15:00
        * `15:30` - 15:30
        * `16:00` - 16:00
        * `16:30` - 16:30
        * `17:00` - 17:00
        * `17:30` - 17:30
    ConfirmCode:
      type: object
      properties:
        telephone:
          type: string
        confirmation_code:
          type: string
          maxLength: 150
        is_agreement:
          type: boolean
      required:
      - is_agreement
      - telephone
    ConfirmCodeRefresh:
      type: object
      properties:
        telephone:
          type: string
        is_agreement:
          type: boolean
      required:
      - is_agreement
      - telephone
    EndEnum:
      enum:
      - 08:00
      - 08:30
      - 09:00
      - 09:30
      - '10:00'
      - '10:30'
      - '11:00'
      - '11:30'
      - '12:00'
      - '12:30'
      - '13:00'
      - '13:30'
      - '14:00'
      - '14:30'
      - '15:00'
      - '15:30'
      - '16:00'
      - '16:30'
      - '17:00'
      - '17:30'
      type: string
      description: |-
        * `08:00` - 08:00
        * `08:30` - 08:30
        * `09:00` - 09:00
        * `09:30` - 09:30
        * `10:00` - 10:00
        * `10:30` - 10:30
        * `11:00` - 11:00
        * `11:30` - 11:30
        * `12:00` - 12:00
        * `12:30` - 12:30
        * `13:00` - 13:00
        * `13:30` - 13:30
        * `14:00` - 14:00
        * `14:30` - 14:30
        * `15:00` - 15:00
        * `15:30` - 15:30
        * `16:00` - 16:00
        * `16:30` - 16:30
        * `17:00` - 17:00
        * `17:30` - 17:30
    Establishment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        worked:
          type: array
          items:
            $ref: '#/components/schemas/Work'
          readOnly: true
        kitchen:
          type: array
          items:
            $ref: '#/components/schemas/Kitchen'
          readOnly: true
        tables:
          type: array
          items:
            $ref: '#/components/schemas/TableEstablishment'
          readOnly: true
        name:
          type: string
          title: Название заведения
          maxLength: 200
        address:
          type: string
          title: Адрес заведения
          maxLength: 1000
        busy_start:
          allOf:
          - $ref: '#/components/schemas/BusyStartEnum'
          title: Часы загруженности начало
        busy_end:
          allOf:
          - $ref: '#/components/schemas/BusyEndEnum'
          title: Часы загруженности конец
        average_check:
          allOf:
          - $ref: '#/components/schemas/AverageCheckEnum'
          title: Средний чек
        poster:
          type: string
          format: uri
          title: Постер заведения
        imagetables:
          type: string
          format: uri
          title: План
        email:
          type: string
          format: email
          maxLength: 254
        telephone:
          type: string
          maxLength: 128
        social:
          type: string
          title: Соц.сеть
          maxLength: 1000
        description:
          type: string
          title: Описание заведения
          maxLength: 5000
        is_verified:
          type: boolean
          title: Верификация заведения
        owner:
          type: integer
          title: Владелец
        file:
          type: array
          items:
            type: integer
            title: Изображения заведения
          readOnly: true
          title: Изображения заведения
        services:
          type: array
          items:
            type: integer
            title: Услуга заведения
          title: Услуга заведения
      required:
      - address
      - average_check
      - busy_end
      - busy_start
      - description
      - email
      - file
      - id
      - imagetables
      - kitchen
      - name
      - owner
      - poster
      - services
      - social
      - tables
      - telephone
      - worked
    Kitchen:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название кухни
          maxLength: 200
        description:
          type: string
          title: Описание кухни
          maxLength: 2000
        slug:
          type: string
          title: Ссылка на кухню
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - description
      - id
      - name
      - slug
    NameEnum:
      enum:
      - понедельник
      - вторник
      - среда
      - четверг
      - пятница
      - суббота
      - воскресенье
      type: string
      description: |-
        * `понедельник` - понедельник
        * `вторник` - вторник
        * `среда` - среда
        * `четверг` - четверг
        * `пятница` - пятница
        * `суббота` - суббота
        * `воскресенье` - воскресенье
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedUser:
      type: object
      properties:
        telephone:
          type: string
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          pattern: ^[a-zA-Z\u0430-\u044f\u0410-\u042f]+$
          maxLength: 150
        last_name:
          type: string
          pattern: ^[a-zA-Z\u0430-\u044f\u0410-\u042f]+$
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: User`s role
    RoleEnum:
      enum:
      - client
      - restorateur
      type: string
      description: |-
        * `client` - Клиент
        * `restorateur` - Ресторатор
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SignUp:
      type: object
      properties:
        telephone:
          type: string
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          pattern: ^[a-zA-Z\u0430-\u044f\u0410-\u042f]+$
          maxLength: 150
        last_name:
          type: string
          pattern: ^[a-zA-Z\u0430-\u044f\u0410-\u042f]+$
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: User`s role
        password:
          type: string
          title: Пароль
          maxLength: 128
      required:
      - email
      - first_name
      - last_name
      - password
      - role
      - telephone
    StartEnum:
      enum:
      - 08:00
      - 08:30
      - 09:00
      - 09:30
      - '10:00'
      - '10:30'
      - '11:00'
      - '11:30'
      - '12:00'
      - '12:30'
      - '13:00'
      - '13:30'
      - '14:00'
      - '14:30'
      - '15:00'
      - '15:30'
      - '16:00'
      - '16:30'
      - '17:00'
      - '17:30'
      type: string
      description: |-
        * `08:00` - 08:00
        * `08:30` - 08:30
        * `09:00` - 09:00
        * `09:30` - 09:30
        * `10:00` - 10:00
        * `10:30` - 10:30
        * `11:00` - 11:00
        * `11:30` - 11:30
        * `12:00` - 12:00
        * `12:30` - 12:30
        * `13:00` - 13:00
        * `13:30` - 13:30
        * `14:00` - 14:00
        * `14:30` - 14:30
        * `15:00` - 15:00
        * `15:30` - 15:30
        * `16:00` - 16:00
        * `16:30` - 16:30
        * `17:00` - 17:00
        * `17:30` - 17:30
    TableEstablishment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название стола
          readOnly: true
        description:
          type: string
          title: Описание стола
          readOnly: true
        slug:
          type: string
          title: Ссылка на стол
          readOnly: true
        seats:
          type: integer
          maximum: 100
          minimum: 1
          title: Количество мест
        status:
          type: boolean
          title: Статус стола занят/свободен
      required:
      - description
      - id
      - name
      - seats
      - slug
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        telephone:
          type: string
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          pattern: ^[a-zA-Z\u0430-\u044f\u0410-\u042f]+$
          maxLength: 150
        last_name:
          type: string
          pattern: ^[a-zA-Z\u0430-\u044f\u0410-\u042f]+$
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: User`s role
      required:
      - email
      - first_name
      - last_name
      - role
      - telephone
    Work:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          allOf:
          - $ref: '#/components/schemas/NameEnum'
          title: День недели
        start:
          allOf:
          - $ref: '#/components/schemas/StartEnum'
          title: Начало работы
        end:
          allOf:
          - $ref: '#/components/schemas/EndEnum'
          title: Конец работы
      required:
      - end
      - id
      - name
      - start
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    jwtAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "JWT"
